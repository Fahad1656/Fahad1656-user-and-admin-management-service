datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}



model User {
  id                Int       @id @default(autoincrement())
  name              String
  email             String    @unique

  age               String    // Consider using Int for age if it is numerical
  password          String
  posts             Post[]    // Relation with Post model
  messagesSent      Message[] @relation("Sender")
  messagesReceived  Message[] @relation("Receiver")
}

model Post {
  id      Int     @id @default(autoincrement())
  title   String
  salary  String
  userId  Int
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade) // Enable cascading delete
}

model Admin {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
}
model Message {
  id        Int      @id @default(autoincrement())
  content   String
  senderId  Int
  receiverId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender    User     @relation("Sender", fields: [senderId], references: [id], onDelete: Cascade)
  receiver  User     @relation("Receiver", fields: [receiverId], references: [id], onDelete: Cascade)
}
model RecordingSession {
  id            Int      @id @default(autoincrement())
  channelName   String   // Name of the channel

  uid           String   // UID from acquireResource API
  resourceId    String   @db.VarChar(255) // Resource ID from acquireResource API

  sid           String?  // Session ID (received from startRecording API)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
